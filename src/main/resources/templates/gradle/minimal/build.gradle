/**
 * This is autogenerated build.gradle
 * You can add your dependencies, tasks, etc,
 * but it is not recommended to modify existing code,
 * because it may break the plugin
 *
 * Minimal version of build.gradle file
 * See full version for more comments and additional tasks
 *
 * Authored by: Dierk
 * Origin: https://github.com/Dierk/HelloFrege/blob/sample_code/build.gradle
 * Modified by 23jura23
 */


plugins {
    id "application"
    id "idea"
    id "de.undercouch.download" version "4.1.1"
}


ext {
    DEFAULT_JAVA_TARGET = "11"
    DEFAULT_FREGE_RELEASE = "3.24alpha"
    DEFAULT_FREGE_VERSION = "3.24.100"

    javaTarget = project.findProperty("javaTarget") ?: DEFAULT_JAVA_TARGET
    fregeRelease = project.findProperty("fregeRelease") ?: DEFAULT_FREGE_RELEASE
    fregeVersion = project.findProperty("fregeVersion") ?: DEFAULT_FREGE_VERSION

    fregeDoDownloadCompiler = !project.hasProperty("fregeJar")

    if (fregeDoDownloadCompiler) {
        fregeDir = "${rootProject.projectDir}/lib/org/frege-lang/frege/${fregeVersion}"
        fregeJar = "${fregeDir}/frege-${fregeVersion}.jar"
        fregeCompilerUrl = "https://github.com/Frege/frege/releases/download/${fregeRelease}/frege${fregeVersion}.jar"
        fregeLibDependency = "org.frege-lang:frege:${fregeVersion}"
        doDownloadCompiler()
    } else {
        fregeJarFile = file(project.getProperty("fregeJar"))
        fregeDir = fregeJarFile.getParentFile().toString()

        // get filename without extension, and add empty group before it
        fregeLibDependency = ":" + fregeJarFile.getName().take(fregeJarFile.getName().lastIndexOf("."))
    }

    fregeMainSourceDir = "${projectDir}/src/main/frege"
    fregeMainJavaDir = "${buildDir}/src/main/frege"
}

idea {
    module {
        sourceDirs += file(fregeMainSourceDir)
    }
}

repositories {
    flatDir {
        dirs fregeDir
    }
}

void doDownloadCompiler() {
    download {
        src fregeCompilerUrl
        dest fregeJar
        overwrite false
    }
}

dependencies {
    implementation fregeLibDependency
}

task fregeInit {
    group "frege"
    ant.mkdir(dir: fregeMainSourceDir)
}

task prepareCompileDirs { // prepare all the directories that the frege tasks rely upon
    group "frege"
    outputs.dir(sourceSets.main.java.outputDir).withPropertyName("compileOutputDir")
    outputs.dir(sourceSets.test.java.outputDir).withPropertyName("testOutputDir")
    doLast {
        ant.mkdir(dir: sourceSets.main.java.outputDir)
        ant.mkdir(dir: sourceSets.test.java.outputDir)
    }
}

task fregeCompile(type: JavaExec) {      	// https://docs.gradle.org/6.5/dsl/org.gradle.api.tasks.JavaExec.html
    dependsOn     prepareCompileDirs
    group       = "frege"
    description = "Compile the -Pfrege_file=."
    classpath   = files fregeJar
    args([
            "-d", sourceSets.main.java.outputDir,
            "-fp", sourceSets.main.compileClasspath.asPath,
            "-enc", "UTF-8",
            "-target", javaTarget,
            "-hints",
            "-make",
            "-sp", sourceSets.main.java.srcDirs.join(':'),
            "-ascii",
            "-latin",
            project.hasProperty("frege_file") ? project.frege_file : fregeMainSourceDir
    ])
}

fregeCompile.doLast {
    ant.move(toDir: fregeMainJavaDir) {
        fileSet(dir: sourceSets.main.java.outputDir) {
            include name:"**/*.java"
        }
    }
}

task fregeRun(type: JavaExec) {
    dependsOn     fregeCompile  // in case we always want to compile before running
    group         = "frege"
    description   = "Run -Pclass_name=${project.mainClassName}"
    standardInput = System.in 								// this might run interactively, so we need stdin
    classpath     = files sourceSets.main.runtimeClasspath.asPath
    main          = project.hasProperty("class_name") ? project.class_name : project.mainClassName
}

compileJava.dependsOn fregeCompile
sourceSets.main.compileClasspath = files (sourceSets.main.compileClasspath + sourceSets.main.java.outputDir)