import org.jetbrains.grammarkit.tasks.*

plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.5.0'
    id 'org.jetbrains.intellij' version '0.7.2'
    id 'org.jetbrains.grammarkit' version '2021.1'
    id 'idea'
}

apply plugin: 'org.jetbrains.intellij'
apply plugin: 'org.jetbrains.grammarkit'

group 'com.plugin.frege'
version '1.0.1'

repositories {
    mavenCentral()
}


dependencies {
    implementation 'org.jetbrains.kotlin:kotlin-reflect:1.5.0'
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
}

intellij {
    version '211.6085-EAP-CANDIDATE-SNAPSHOT'
    plugins = ['java', 'gradle', 'gradle-java']
    downloadSources true
}

task generateFregeLexer(type: GenerateLexer) {
    source = 'src/main/java/com/plugin/frege/lexer/FregeLexer.flex'
    targetDir = 'src/gen/com/plugin/frege/lexer/'
    targetClass = 'FregeLexer'
    purgeOldFiles = true
}

task generateFregeParser(type: GenerateParser) {
    source = 'src/main/java/com/plugin/frege/Frege.bnf'
    targetRoot = 'src/gen'
    pathToParser = '/com/plugin/frege/parser/FregeParser.java'
    pathToPsiRoot = '/com/plugin/frege/psi'
    purgeOldFiles = true
}

compileKotlin {
    dependsOn generateFregeParser
    dependsOn generateFregeLexer
}

compileJava {
    dependsOn generateFregeParser
    dependsOn generateFregeLexer
}

sourceSets.main.java.srcDirs 'src/gen'
